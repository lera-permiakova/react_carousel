{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","start","props","frameSize","refElement","React","createRef","width","itemWidth","timerId","style","height","componentDidMount","animationDuration","setInterval","setState","prevState","current","scrollLeft","step","clearInterval","scrollRight","this","images","className","type","disabled","onClick","ref","map","image","src","alt","length","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uPAeMA,E,4MACJC,MAAQ,CACNC,MAAO,EAAKC,MAAMC,W,EAGpBC,WAAaC,IAAMC,Y,EAEnBC,MAAQ,EAAKL,MAAMM,UAAY,EAAKN,MAAMC,U,EAE1CM,a,IAEAC,MAAQ,CACNH,MAAO,EAAKA,MACZI,OAAQ,EAAKJ,O,EAGfK,kBAAoB,WAClB,MAAyC,EAAKV,MAAtCM,EAAR,EAAQA,UAAWK,EAAnB,EAAmBA,kBAEnB,EAAKJ,QAAUK,aAAY,WACzB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEf,MAAOe,EAAUf,MAAQ,MACnD,EAAKG,YAAc,EAAKA,WAAWa,UACrC,EAAKb,WAAWa,QAAQC,YAAcV,KAEvCK,I,EAGLK,WAAa,WACX,MAA4B,EAAKhB,MAAzBM,EAAR,EAAQA,UAAWW,EAAnB,EAAmBA,KAEf,EAAKV,SACPW,cAAc,EAAKX,SAGrB,EAAKM,UAAS,SAAAC,GAAS,MAAK,CAAEf,MAAOe,EAAUf,MAAQkB,MACnD,EAAKf,YAAc,EAAKA,WAAWa,UACrC,EAAKb,WAAWa,QAAQC,YAAcV,EAAYW,I,EAItDE,YAAc,WACZ,MAA4B,EAAKnB,MAAzBM,EAAR,EAAQA,UAAWW,EAAnB,EAAmBA,KAEnB,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAAEf,MAAOe,EAAUf,MAAQkB,MACnD,EAAKf,YAAc,EAAKA,WAAWa,UACrC,EAAKb,WAAWa,QAAQC,YAAcV,EAAYW,I,4CAItD,WACE,MAA8BG,KAAKpB,MAA3BqB,EAAR,EAAQA,OAAQpB,EAAhB,EAAgBA,UACRF,EAAUqB,KAAKtB,MAAfC,MAER,OACE,sBAAKuB,UAAU,WAAf,UACE,wBACEC,KAAK,SACLD,UAAU,mBACVE,SAAUzB,GAASE,EACnBwB,QAASL,KAAKJ,WAJhB,SAMG,MAEH,qBACEU,IAAKN,KAAKlB,WACVoB,UAAU,YACVd,MAAOY,KAAKZ,MAHd,SAKE,oBAAIc,UAAU,iBAAd,SACGD,EAAOM,KAAI,SAACC,GAAD,OACV,oBAAgBN,UAAU,kBAA1B,SAA4C,qBAAKO,IAAKD,EAAOE,IAAI,WAAxDF,UAIf,wBACEL,KAAK,SACLD,UAAU,mBACVE,SAAUzB,GAASsB,EAAOU,OAC1BN,QAASL,KAAKD,YAJhB,SAMG,a,GAhFYhB,IAAM6B,WAuFdnC,ICzFToC,E,4MACJnC,MAAQ,CACNuB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFJ,KAAM,EACNhB,UAAW,EACXK,UAAW,IACXK,kBAAmB,K,4CAGrB,WACE,MAEIS,KAAKtB,MADPuB,EADF,EACEA,OAAQJ,EADV,EACUA,KAAMhB,EADhB,EACgBA,UAAWK,EAD3B,EAC2BA,UAAWK,EADtC,EACsCA,kBAGtC,OACE,sBAAKW,UAAU,MAAf,UAEE,qBAAIA,UAAU,aAAd,2BAA0CD,EAAOU,OAAjD,aACA,cAAC,EAAD,CACEV,OAAQA,EACRJ,KAAMA,EACNhB,UAAWA,EACXK,UAAWA,EACXK,kBAAmBA,W,GAlCXR,IAAM6B,WAyCTC,ICnDfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.db5f48c0.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\ntype State = {\n  start: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    start: this.props.frameSize,\n  };\n\n  refElement = React.createRef<HTMLInputElement>();\n\n  width = this.props.itemWidth * this.props.frameSize;\n\n  timerId?: NodeJS.Timer;\n\n  style = {\n    width: this.width,\n    height: this.width,\n  };\n\n  componentDidMount = () => {\n    const { itemWidth, animationDuration } = this.props;\n\n    this.timerId = setInterval(() => {\n      this.setState(prevState => ({ start: prevState.start + 1 }));\n      if (this.refElement && this.refElement.current) {\n        this.refElement.current.scrollLeft += itemWidth;\n      }\n    }, animationDuration);\n  };\n\n  scrollLeft = () => {\n    const { itemWidth, step } = this.props;\n\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n\n    this.setState(prevState => ({ start: prevState.start - step }));\n    if (this.refElement && this.refElement.current) {\n      this.refElement.current.scrollLeft -= itemWidth * step;\n    }\n  };\n\n  scrollRight = () => {\n    const { itemWidth, step } = this.props;\n\n    this.setState(prevState => ({ start: prevState.start + step }));\n    if (this.refElement && this.refElement.current) {\n      this.refElement.current.scrollLeft += itemWidth * step;\n    }\n  };\n\n  render() {\n    const { images, frameSize } = this.props;\n    const { start } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          disabled={start <= frameSize}\n          onClick={this.scrollLeft}\n        >\n          {'<'}\n        </button>\n        <div\n          ref={this.refElement}\n          className=\"container\"\n          style={this.style}\n        >\n          <ul className=\"Carousel__list\">\n            {images.map((image) => (\n              <li key={image} className=\"Carousel__image\"><img src={image} alt=\"smile\" /></li>\n            ))}\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          disabled={start >= images.length}\n          onClick={this.scrollRight}\n        >\n          {'>'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 2000,\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\">Carousel with {images.length} images</h1>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}